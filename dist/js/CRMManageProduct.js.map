{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js"],"names":["PROPER_FUNCTION_NAME","PROPER","defineBuiltIn","anObject","$toString","fails","getRegExpFlags","TO_STRING","RegExpPrototype","RegExp","prototype","n$ToString","NOT_GENERIC","call","source","flags","INCORRECT_NAME","name","R","this","pattern","unsafe","$TypeError","TypeError","MAX_SAFE_INTEGER","module","exports","it","hasOwn","isPrototypeOf","regExpFlags","undefined"],"mappings":"oHACA,IAAIA,EAAuB,EAAQ,QAA8BC,OAC7DC,EAAgB,EAAQ,QACxBC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBC,EAAQ,EAAQ,QAChBC,EAAiB,EAAQ,QAEzBC,EAAY,WACZC,EAAkBC,OAAOC,UACzBC,EAAaH,EAAgBD,GAE7BK,EAAcP,GAAM,WAAc,MAAuD,QAAhDM,EAAWE,KAAK,CAAEC,OAAQ,IAAKC,MAAO,SAE/EC,EAAiBhB,GAAwBW,EAAWM,MAAQV,GAI5DK,GAAeI,IACjBd,EAAcO,OAAOC,UAAWH,GAAW,WACzC,IAAIW,EAAIf,EAASgB,MACbC,EAAUhB,EAAUc,EAAEJ,QACtBC,EAAQX,EAAUE,EAAeY,IACrC,MAAO,IAAME,EAAU,IAAML,IAC5B,CAAEM,QAAQ,K,mBCxBf,IAAIC,EAAaC,UACbC,EAAmB,iBAEvBC,EAAOC,QAAU,SAAUC,GACzB,GAAIA,EAAKH,EAAkB,MAAMF,EAAW,kCAC5C,OAAOK,I,uBCLT,IAAId,EAAO,EAAQ,QACfe,EAAS,EAAQ,QACjBC,EAAgB,EAAQ,QACxBC,EAAc,EAAQ,QAEtBtB,EAAkBC,OAAOC,UAE7Be,EAAOC,QAAU,SAAUR,GACzB,IAAIH,EAAQG,EAAEH,MACd,YAAiBgB,IAAVhB,GAAyB,UAAWP,GAAqBoB,EAAOV,EAAG,WAAYW,EAAcrB,EAAiBU,GAC1FH,EAAvBF,EAAKiB,EAAaZ","file":"js/CRMManageProduct.js","sourcesContent":["'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar defineBuiltIn = require('../internals/define-built-in');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, { unsafe: true });\n}\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n"],"sourceRoot":""}